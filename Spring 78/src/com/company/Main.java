package com.company;

import java.io.PrintWriter;

public class Main {

    // Конфертация между JSON и Java-объектами.
    // Библиотека Jackson.


    // Конвертиация.

    // JSON является стандартом конвертации между сервисами.
    // Это очень простой и интуитивно понятный формат данных, который использует формат ключ-значение.

//    {
//        "orderID": 12345,
//        "shopperName": "Ivan Ivanov",
//        "contents": [
//        {
//            "productID": 34,
//            "productName": "Super product"       ->           Java
//        },                                       <-          объект
//        {
//            "productID": 34,
//            "productName": "Super product"
//        }
//        ]
//    }

    // Данные находятся в формате ключ-значение. Также могут быть массивы (ключ contents), в этом массиве
    // лежат объекты и в каждом объекте ключи и значения.

    // JSON мы не можем напрямую использовать в Java-приложении (можно в JS). Мы не можем напрямую обратиться
    // к ключу и получить его значение. Но мы можем JSON перевести в Java-объект, в котором мы можем работать
    // с ключами. Ключ в JSON - это поле в Java-объекте.

    // Чтобы конвертировать JSON в Java-объект и наоборот используется библиотека Jackson.


    // Jackson.

    // Это библиотека для конвертациии JSON в Java-объект и наоборот.

    // Допутим в классе Person персон есть поля id, name, age. Мы должны для всех этих полей создать геттеры
    // и сеттеры.

    // Чтобы объект Person переслать по сети нужно сначала его сконвертировать в JSON.
    // JSON этого объекта будет выглядеть так:
//    {
//        "id": 1,
//        "name": "Bob",
//        "age": 18
//    }

    // То есть ключи соответствуют полям в классе. Для такой конвертации в JSON и обратно в Java-объект
    // используется Jackson. И мы с помощью геттера обратиться к полю и получить его значение.

    // Этот JSON-объект может принять другое приложение на другом ЯП. Этот объект можно перевести в JS,
    // Python объект и т.д.
}
